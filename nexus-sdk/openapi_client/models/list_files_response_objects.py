# coding: utf-8

"""
    Atinary™ Nexus

    As part of Atinary™ Nexus, we offer a downloadable software development kit (SDK) client, which facilitates the access to the application programming interface (API) entry point. This API allows users to manage their project subscriptions and to share files among collaborators involved in the same project(s). The api usage requires an `API KEY`, associated to your Atinary™ Nexus account. You can generate your `API KEY` on your [account information page](https://home.atinary.com/user).  # noqa: E501

    The version of the OpenAPI document: beta
    Contact: support@atinary.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ListFilesResponseObjects(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'file_id': 'str',
        'name': 'str',
        'group_type': 'str',
        'creation_date': 'str'
    }

    attribute_map = {
        'file_id': 'file_id',
        'name': 'name',
        'group_type': 'group_type',
        'creation_date': 'creation_date'
    }

    def __init__(self, file_id=None, name=None, group_type=None, creation_date=None, local_vars_configuration=None):  # noqa: E501
        """ListFilesResponseObjects - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._file_id = None
        self._name = None
        self._group_type = None
        self._creation_date = None
        self.discriminator = None

        self.file_id = file_id
        self.name = name
        self.group_type = group_type
        self.creation_date = creation_date

    @property
    def file_id(self):
        """Gets the file_id of this ListFilesResponseObjects.  # noqa: E501

        ID assigned to the file once it is uploaded  # noqa: E501

        :return: The file_id of this ListFilesResponseObjects.  # noqa: E501
        :rtype: str
        """
        return self._file_id

    @file_id.setter
    def file_id(self, file_id):
        """Sets the file_id of this ListFilesResponseObjects.

        ID assigned to the file once it is uploaded  # noqa: E501

        :param file_id: The file_id of this ListFilesResponseObjects.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and file_id is None:  # noqa: E501
            raise ValueError("Invalid value for `file_id`, must not be `None`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                file_id is not None and len(file_id) > 36):
            raise ValueError("Invalid value for `file_id`, length must be less than or equal to `36`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                file_id is not None and len(file_id) < 36):
            raise ValueError("Invalid value for `file_id`, length must be greater than or equal to `36`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                file_id is not None and not re.search(r'^fle_[0-9a-f]{32}$', file_id)):  # noqa: E501
            raise ValueError(r"Invalid value for `file_id`, must be a follow pattern or equal to `/^fle_[0-9a-f]{32}$/`")  # noqa: E501

        self._file_id = file_id

    @property
    def name(self):
        """Gets the name of this ListFilesResponseObjects.  # noqa: E501

        File Name  # noqa: E501

        :return: The name of this ListFilesResponseObjects.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ListFilesResponseObjects.

        File Name  # noqa: E501

        :param name: The name of this ListFilesResponseObjects.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and name is None:  # noqa: E501
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                name is not None and len(name) > 255):
            raise ValueError("Invalid value for `name`, length must be less than or equal to `255`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                name is not None and len(name) < 5):
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `5`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                name is not None and not re.search(r'^[_a-zA-Z0-9-]+.\w+$', name)):  # noqa: E501
            raise ValueError(r"Invalid value for `name`, must be a follow pattern or equal to `/^[_a-zA-Z0-9-]+.\w+$/`")  # noqa: E501

        self._name = name

    @property
    def group_type(self):
        """Gets the group_type of this ListFilesResponseObjects.  # noqa: E501

        Indicator of the file nature  # noqa: E501

        :return: The group_type of this ListFilesResponseObjects.  # noqa: E501
        :rtype: str
        """
        return self._group_type

    @group_type.setter
    def group_type(self, group_type):
        """Sets the group_type of this ListFilesResponseObjects.

        Indicator of the file nature  # noqa: E501

        :param group_type: The group_type of this ListFilesResponseObjects.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and group_type is None:  # noqa: E501
            raise ValueError("Invalid value for `group_type`, must not be `None`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                group_type is not None and len(group_type) > 50):
            raise ValueError("Invalid value for `group_type`, length must be less than or equal to `50`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                group_type is not None and not re.search(r'(parameters|properties|other)', group_type)):  # noqa: E501
            raise ValueError(r"Invalid value for `group_type`, must be a follow pattern or equal to `/(parameters|properties|other)/`")  # noqa: E501

        self._group_type = group_type

    @property
    def creation_date(self):
        """Gets the creation_date of this ListFilesResponseObjects.  # noqa: E501

        Entity creation date (UTC).  # noqa: E501

        :return: The creation_date of this ListFilesResponseObjects.  # noqa: E501
        :rtype: str
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this ListFilesResponseObjects.

        Entity creation date (UTC).  # noqa: E501

        :param creation_date: The creation_date of this ListFilesResponseObjects.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and creation_date is None:  # noqa: E501
            raise ValueError("Invalid value for `creation_date`, must not be `None`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                creation_date is not None and len(creation_date) > 27):
            raise ValueError("Invalid value for `creation_date`, length must be less than or equal to `27`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                creation_date is not None and len(creation_date) < 19):
            raise ValueError("Invalid value for `creation_date`, length must be greater than or equal to `19`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                creation_date is not None and not re.search(r'^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z?$', creation_date)):  # noqa: E501
            raise ValueError(r"Invalid value for `creation_date`, must be a follow pattern or equal to `/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z?$/`")  # noqa: E501

        self._creation_date = creation_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ListFilesResponseObjects):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ListFilesResponseObjects):
            return True

        return self.to_dict() != other.to_dict()
